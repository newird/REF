{'line': '12', 'src': '{', 'storage': {'n': '0'}}
{'line': '14', 'src': 'cin >> n;', 'storage': {'n': '0'}}
{'line': '15', 'src': 'FUNC(n);', 'storage': {'n': '6'}}
{'line': '20', 'src': '{', 'storage': {'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '<optimized out>', 'result': '32767', 'max': '21845', 'n': '6'}}
{'line': '21', 'src': 'vector <int> angka(n);', 'storage': {'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '<optimized out>', 'result': '32767', 'max': '21845', 'n': '6'}}
{'line': '21', 'src': 'vector <int> angka(n);', 'storage': {'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '<optimized out>', 'result': '32767', 'max': '21845', 'n': '6'}}
{'line': '21', 'src': 'vector <int> angka(n);', 'storage': {'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '21845', 'n': '6'}}
{'line': '24', 'src': 'int max=-1000000000;', 'storage': {'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '21845', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '-137207925', 'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '1', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '1', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '2', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '2', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '3', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '3', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '4', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '4', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '5', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '5', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '32767', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '-8436', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '32767', 'max': '-1000000000', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '-1000000000', 'n': '6'}}
{'line': '36', 'src': 'max = result;', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '-1000000000', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '2', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '1', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '3', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '2', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '4', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '3', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '5', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '29', 'src': 'for (int i = 0; i < n; i = i++)', 'storage': {'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '31', 'src': 'for (int j = i + 1; j < n; j++)', 'storage': {'j': '6', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '33', 'src': 'result = angka[j] - angka[i];', 'storage': {'j': '1', 'i': '0', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '<optimized out>', 'result': '0', 'max': '7', 'n': '6'}}
{'line': '34', 'src': 'if (result > max)', 'storage': {'j': '1', 'i': '0', 'angka': "Python Exception <class 'RecursionError'>: maximum recursion depth exceeded", 'simpen': '<optimized out>', 'result': '7', 'max': '7', 'n': '6'}}
