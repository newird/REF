{'line': '5', 'src': '{', 'storage': {'n': '0', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '0', 'max': '0'}}
{'line': '7', 'src': 'int index = 0;', 'storage': {'n': '0', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '0', 'max': '0'}}
{'line': '9', 'src': 'int min = 10001;', 'storage': {'n': '0', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '0', 'max': '0'}}
{'line': '10', 'src': 'int max = 0;', 'storage': {'n': '0', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '11', 'src': 'cin >> n;', 'storage': {'n': '0', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '14', 'src': 'cin >> price[i];', 'storage': {'i': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '12', 'src': 'for (int i = 0; i < n; ++i)', 'storage': {'i': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '20', 'src': 'min = price[i];', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '10001', 'max': '0'}}
{'line': '21', 'src': 'index = i;', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '18', 'src': 'if (price[i] < min)', 'storage': {'i': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '16', 'src': 'for (int i = 0; i < n; ++i) // find the minimum among all', 'storage': {'i': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '0', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '26', 'src': 'int curr = price[j] - price[index];', 'storage': {'curr': '0', 'j': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '27', 'src': 'if (curr > max)', 'storage': {'curr': '7', 'j': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '29', 'src': 'max = curr;', 'storage': {'curr': '7', 'j': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '0'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '1', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '26', 'src': 'int curr = price[j] - price[index];', 'storage': {'curr': '7', 'j': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '27', 'src': 'if (curr > max)', 'storage': {'curr': '1', 'j': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '2', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '26', 'src': 'int curr = price[j] - price[index];', 'storage': {'curr': '1', 'j': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '27', 'src': 'if (curr > max)', 'storage': {'curr': '2', 'j': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '3', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '26', 'src': 'int curr = price[j] - price[index];', 'storage': {'curr': '2', 'j': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '27', 'src': 'if (curr > max)', 'storage': {'curr': '3', 'j': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '4', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '26', 'src': 'int curr = price[j] - price[index];', 'storage': {'curr': '3', 'j': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '27', 'src': 'if (curr > max)', 'storage': {'curr': '0', 'j': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '24', 'src': 'for (int j = index + 1; j < n; ++j)', 'storage': {'j': '5', 'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '32', 'src': 'cout << max;', 'storage': {'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '33', 'src': 'return 0;', 'storage': {'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
{'line': '34', 'src': '}', 'storage': {'n': '6', 'index': '0', 'price': '<error reading variable price (value requires 400000 bytes, which is more than max-value-size)>', 'min': '3', 'max': '7'}}
