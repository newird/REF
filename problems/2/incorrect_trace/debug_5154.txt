{'line': '12', 'src': '{', 'storage': {'n': '0'}}
{'line': '14', 'src': 'cin >> n;', 'storage': {'n': '0'}}
{'line': '15', 'src': 'FUNC(n);', 'storage': {'n': '6'}}
{'line': '20', 'src': '{', 'storage': {'min': '1431666088', 'max': '21845', 'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '21', 'src': 'int min = 1000000000, max = -min;', 'storage': {'min': '1431666088', 'max': '21845', 'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '22', 'src': 'vector <int> angka(n);', 'storage': {'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '22', 'src': 'vector <int> angka(n);', 'storage': {'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 8387432, capacity -1150 = {<error reading variable angka (Cannot access memory at address 0x11ff)>', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '22', 'src': 'vector <int> angka(n);', 'storage': {'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '-8436', 'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '29', 'src': 'min = angka[i];', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '30', 'src': 'simpen = i;', 'storage': {'i': '0', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '-137207925', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '0', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '26', 'src': 'cin >> angka[i];', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '27', 'src': 'if (min > angka[i])', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '24', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '33', 'src': 'if (simpen == n - 1)', 'storage': {'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '32767', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '42', 'src': 'if (max < angka[i])', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '44', 'src': 'max = angka[i];', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '1', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '42', 'src': 'if (max < angka[i])', 'storage': {'i': '2', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '2', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '42', 'src': 'if (max < angka[i])', 'storage': {'i': '3', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '3', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '42', 'src': 'if (max < angka[i])', 'storage': {'i': '4', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '4', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '42', 'src': 'if (max < angka[i])', 'storage': {'i': '5', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '40', 'src': 'for (int i = simpen+1; i < n; i++)', 'storage': {'i': '5', 'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '47', 'src': 'result = max - min;', 'storage': {'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '32767', 'n': '6'}}
{'line': '49', 'src': 'cout << result;', 'storage': {'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '7', 'n': '6'}}
{'line': '50', 'src': '}', 'storage': {'min': '3', 'max': '10', 'angka': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'simpen': '0', 'result': '7', 'n': '6'}}
{'line': '16', 'src': 'return 0;', 'storage': {'n': '6'}}
{'line': '17', 'src': '}', 'storage': {'n': '6'}}
