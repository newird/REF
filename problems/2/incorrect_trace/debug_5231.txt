{'line': '18', 'src': '{', 'storage': {'num_of_days': '0', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '20', 'src': 'cin >> num_of_days;', 'storage': {'num_of_days': '0', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '21', 'src': 'int biggest = 0;', 'storage': {'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '23', 'src': 'cin >> nums[0];', 'storage': {'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '24', 'src': 'int is_rise = 0;', 'storage': {'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '25', 'src': 'int curr_rise = 0;', 'storage': {'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '0', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '29', 'src': 'cin >> nums[curr_day];', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '30', 'src': 'if (nums[curr_day] > nums[curr_day - 1])', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '32', 'src': 'if (!is_rise)', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '34', 'src': 'is_rise = 1;', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '0', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '35', 'src': 'min_num = nums[curr_day - 1];', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '0', 'max_num': '<optimized out>'}}
{'line': '36', 'src': 'curr_rise = nums[curr_day] - nums[curr_day - 1];', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '1', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '29', 'src': 'cin >> nums[curr_day];', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '30', 'src': 'if (nums[curr_day] > nums[curr_day - 1])', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '45', 'src': 'if (curr_rise <= 0)', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '52', 'src': 'biggest = max(biggest, curr_rise);', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '0', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '6', 'src': 'if (num1 > num2) return num1;', 'storage': {'num1': '0', 'num2': '7'}}
{'line': '7', 'src': 'else             return num2;', 'storage': {'num1': '0', 'num2': '7'}}
{'line': '8', 'src': '}', 'storage': {'num1': '0', 'num2': '7'}}
{'line': '53', 'src': 'curr_rise += nums[curr_day] - nums[curr_day - 1];', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '7', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '2', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '1', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '29', 'src': 'cin >> nums[curr_day];', 'storage': {'curr_day': '3', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '1', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '30', 'src': 'if (nums[curr_day] > nums[curr_day - 1])', 'storage': {'curr_day': '3', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '1', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '32', 'src': 'if (!is_rise)', 'storage': {'curr_day': '3', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '1', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '40', 'src': 'curr_rise += nums[curr_day] - nums[curr_day - 1];', 'storage': {'curr_day': '3', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '1', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '3', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '2', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '29', 'src': 'cin >> nums[curr_day];', 'storage': {'curr_day': '4', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '2', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '30', 'src': 'if (nums[curr_day] > nums[curr_day - 1])', 'storage': {'curr_day': '4', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '2', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '32', 'src': 'if (!is_rise)', 'storage': {'curr_day': '4', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '2', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '40', 'src': 'curr_rise += nums[curr_day] - nums[curr_day - 1];', 'storage': {'curr_day': '4', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '2', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '4', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '29', 'src': 'cin >> nums[curr_day];', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '30', 'src': 'if (nums[curr_day] > nums[curr_day - 1])', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '45', 'src': 'if (curr_rise <= 0)', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '52', 'src': 'biggest = max(biggest, curr_rise);', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '6', 'src': 'if (num1 > num2) return num1;', 'storage': {'num1': '7', 'num2': '3'}}
{'line': '8', 'src': '}', 'storage': {'num1': '7', 'num2': '3'}}
{'line': '53', 'src': 'curr_rise += nums[curr_day] - nums[curr_day - 1];', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '3', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '27', 'src': 'for (int curr_day = 1; curr_day < num_of_days; curr_day++)', 'storage': {'curr_day': '5', 'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '57', 'src': 'cout << biggest;', 'storage': {'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '58', 'src': 'return 0;', 'storage': {'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '3', 'max_num': '<optimized out>'}}
{'line': '59', 'src': '}', 'storage': {'num_of_days': '6', 'biggest': '7', 'nums': '<error reading variable nums (value requires 400000 bytes, which is more than max-value-size)>', 'is_rise': '1', 'curr_rise': '0', 'min_num': '3', 'max_num': '<optimized out>'}}
