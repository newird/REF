{'line': '12', 'src': '{', 'storage': {'n': '0'}}
{'line': '14', 'src': 'cin >> n;', 'storage': {'n': '0'}}
{'line': '15', 'src': 'FUNC(n);', 'storage': {'n': '6'}}
{'line': '20', 'src': '{', 'storage': {'min': '0', 'max': '0', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '21', 'src': 'int min = 1000000000, max = -min;', 'storage': {'min': '0', 'max': '0', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '30', 'src': 'min = angka[i];', 'storage': {'i': '0', 'min': '1000000000', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '31', 'src': 'simpen = i;', 'storage': {'i': '0', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '0', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '2', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '3', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '4', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '27', 'src': 'cin >> angka[i];', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '28', 'src': 'if (min > angka[i])', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '25', 'src': 'for (int i = 0; i < n; i++)', 'storage': {'i': '5', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '34', 'src': 'if (simpen == n - 1)', 'storage': {'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '0', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '62', 'src': 'if (max < angka[i])', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '64', 'src': 'max = angka[i];', 'storage': {'i': '1', 'min': '3', 'max': '-1000000000', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '1', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '62', 'src': 'if (max < angka[i])', 'storage': {'i': '2', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '2', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '62', 'src': 'if (max < angka[i])', 'storage': {'i': '3', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '3', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '62', 'src': 'if (max < angka[i])', 'storage': {'i': '4', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '4', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '62', 'src': 'if (max < angka[i])', 'storage': {'i': '5', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '60', 'src': 'for (int i = simpen + 1; i < n; i++)', 'storage': {'i': '5', 'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '67', 'src': 'result = max - min;', 'storage': {'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '0', 'n': '6'}}
{'line': '70', 'src': 'cout << result;', 'storage': {'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '7', 'n': '6'}}
{'line': '71', 'src': '}', 'storage': {'min': '3', 'max': '10', 'angka': '<error reading variable angka (value requires 400000 bytes, which is more than max-value-size)>', 'simpen': '0', 'result': '7', 'n': '6'}}
{'line': '16', 'src': 'return 0;', 'storage': {'n': '6'}}
{'line': '17', 'src': '}', 'storage': {'n': '6'}}
