{'line': '5', 'src': '{', 'storage': {'n': '-96', 'arr': '<error reading variable arr (value requires 562949409821668 bytes, which is more than max-value-size)>', 'stack': '<error reading variable stack (value requires 562949393818540 bytes, which is more than max-value-size)>', 'po': '-1', 'max': '1600677166'}}
{'line': '20', 'src': '}', 'storage': {'n': '-96', 'arr': '<error reading variable arr (value requires 562949409821668 bytes, which is more than max-value-size)>', 'stack': '<error reading variable stack (value requires 562949393818540 bytes, which is more than max-value-size)>', 'po': '-1', 'max': '1600677166'}}
{'line': '7', 'src': 'cin>>n;', 'storage': {'n': '-96', 'arr': '<error reading variable arr (value requires 562949409821668 bytes, which is more than max-value-size)>', 'stack': '<error reading variable stack (value requires 562949393818540 bytes, which is more than max-value-size)>', 'po': '-1', 'max': '1600677166'}}
{'line': '8', 'src': 'int arr[n];', 'storage': {'n': '6', 'arr': '<error reading variable arr (value requires 562949409821668 bytes, which is more than max-value-size)>', 'stack': '<error reading variable stack (value requires 562949393818540 bytes, which is more than max-value-size)>', 'po': '-1', 'max': '1600677166'}}
{'line': '9', 'src': 'int stack[n+1];', 'storage': {'n': '6', 'arr': '{-8432, 32767, -134230016, 32767, -8352, 32767}', 'stack': '<error reading variable stack (value requires 562949393818540 bytes, which is more than max-value-size)>', 'po': '-1', 'max': '1600677166'}}
{'line': '10', 'src': 'int po=0,max=0;', 'storage': {'n': '6', 'arr': '{-8432, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{-135840224, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '-1', 'max': '1600677166'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '1819242352', 'n': '6', 'arr': '{-8432, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{-135840224, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '0', 'max': '0'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '0', 'n': '6', 'arr': '{-8432, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{-135840224, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '0', 'max': '0'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '0', 'n': '6', 'arr': '{3, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{-135840224, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '0', 'max': '0'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '0', 'n': '6', 'arr': '{3, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{-135840224, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '0', 'max': '0'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '0', 'n': '6', 'arr': '{3, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '0'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 32767, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '0'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '0'}}
{'line': '14', 'src': 'else if(arr[i]-stack[0]>max){max=arr[i]-stack[0];}', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '0'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '7'}}
{'line': '16', 'src': 'else if(arr[i]>=stack[po-1]){stack[po]=arr[i];po++;}', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 32767, 27868824, 0, 6, 0, -1120423680}', 'po': '1', 'max': '7'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '1', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, -134230016, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '14', 'src': 'else if(arr[i]-stack[0]>max){max=arr[i]-stack[0];}', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '16', 'src': 'else if(arr[i]>=stack[po-1]){stack[po]=arr[i];po++;}', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 10, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '2', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 32767, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '14', 'src': 'else if(arr[i]-stack[0]>max){max=arr[i]-stack[0];}', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '16', 'src': 'else if(arr[i]>=stack[po-1]){stack[po]=arr[i];po++;}', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 27868824, 0, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '3', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, -8352, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '14', 'src': 'else if(arr[i]-stack[0]>max){max=arr[i]-stack[0];}', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '16', 'src': 'else if(arr[i]>=stack[po-1]){stack[po]=arr[i];po++;}', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 0, 6, 0, -1120423680}', 'po': '3', 'max': '7'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '4', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '12', 'src': 'cin>>arr[i];', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 32767}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '13', 'src': 'if(po==0){}', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '14', 'src': 'else if(arr[i]-stack[0]>max){max=arr[i]-stack[0];}', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '15', 'src': 'if(po==0){stack[0]=arr[i];po++;}', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '16', 'src': 'else if(arr[i]>=stack[po-1]){stack[po]=arr[i];po++;}', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 4, 5, 6, 6, 0, -1120423680}', 'po': '4', 'max': '7'}}
{'line': '11', 'src': 'for(int i=0;i<n;i++){', 'storage': {'i': '5', 'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 3, 5, 6, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '19', 'src': 'cout<<max<<endl;', 'storage': {'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 3, 5, 6, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
{'line': '20', 'src': '}', 'storage': {'n': '6', 'arr': '{3, 10, 4, 5, 6, 3}', 'stack': '{3, 3, 5, 6, 6, 0, -1120423680}', 'po': '2', 'max': '7'}}
