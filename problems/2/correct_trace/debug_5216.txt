{'line': '27', 'src': 'int main() {', 'storage': {'n': '-1', 'prices': 'std::vector of length 35184337113658, capacity 35184338113832 = {<error reading variable prices (Cannot access memory at address 0x0)>', 'result': '1819242352'}}
{'line': '30', 'src': 'cin >> n;', 'storage': {'n': '-1', 'prices': 'std::vector of length 35184337113658, capacity 35184338113832 = {<error reading variable prices (Cannot access memory at address 0x0)>', 'result': '1819242352'}}
{'line': '31', 'src': 'vector<int> prices(n);', 'storage': {'n': '6', 'prices': 'std::vector of length 35184337113658, capacity 35184338113832 = {<error reading variable prices (Cannot access memory at address 0x0)>', 'result': '1819242352'}}
{'line': '31', 'src': 'vector<int> prices(n);', 'storage': {'n': '6', 'prices': 'std::vector of length 35184337113658, capacity 35184338113832 = {<error reading variable prices (Cannot access memory at address 0x0)>', 'result': '1819242352'}}
{'line': '31', 'src': 'vector<int> prices(n);', 'storage': {'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '1600677166', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '0', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '0', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '1', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 0, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '1', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '2', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 0, 0, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '2', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '3', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 0, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '3', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '4', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 0, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '4', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'result': '1819242352'}}
{'line': '33', 'src': 'cin >> prices[i];', 'storage': {'i': '5', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 0}', 'result': '1819242352'}}
{'line': '32', 'src': 'for (int i = 0; i < n; i++) {', 'storage': {'i': '5', 'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'result': '1819242352'}}
{'line': '37', 'src': 'int result = maxProfit(prices);', 'storage': {'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'result': '1819242352'}}
{'line': '7', 'src': 'int maxProfit(vector<int>& prices) {', 'storage': {'n': '32767', 'dp': 'std::vector of length -35184329742273, capacity -35184338128775 = {-135886872, 32767, 1, 0, -136519275, 32767, 0, 0, 0, 0, -136518773, 32767, 4, 0, -136518779, 32767, 5, 0, 724380718, 825251960, 892613426, 959985462, 1684234849, 825255525, 892613426, 959985462, 1145258561, 724387397, 825251960, 892613426, 959985462, 1684234849, 1111582309, 1178944579, 0, 0, -135885640, 32767, 2, 0, -135885728, 32767, 2, 0, -135885816, 32767, 2, 0, -135885904, 32767, 2, 0, 0, 0, 0, 0, -135874920, 32767, 2, 0, -138609152, 32767, -136467070, 32767, -135863040, 32767, 2, 0, -135874560, 32767, 2, 0, -135863816, 32767, 2, 0, -135841984, 32767, -138609152, 32767, -136467070, 32767, 0, 0, -135874608, 32767, 2, 0, -135874656, 32767, 2, 0, -135875024, 32767, 2, 0, -135841568, 32767, 0, 0, -135875128, 32767, 2, 0, -135841408, 32767, 0, 0, -135889744, 32767, 2, 0, -138609152, 32767, 0, 0, -135863944, 32767, 2, 0, -135864064, 32767, 2, 0, -135875272, 32767, 2, 0, -135841248, 32767, 0, 0, -135875384, 32767, 2, 0, -138609152, 32767, 0, 0, 0, 0, 0, 0, -135884544, 32767, 2, 0, -138609152, 32767, 33619969, 100992003, 168364039, 235736075, 303108111, 370480147, 437852183, 505224219, 572596255, 639968291, 707340327, 774712363, 842084399, 909456435, 976828471, 1044200507, 1111572543, 1178944579, 1246316615, 1313688651, 1381060687, 1448432723, 1515804759, 1583176795, 1650548831, 1717920867, 1785292903, 1852664939, 1920036975, 1987409011, 2054781047, 2122153083, 127, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16...}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '9', 'src': 'int n = prices.size();', 'storage': {'n': '32767', 'dp': 'std::vector of length -35184329742273, capacity -35184338128775 = {-135886872, 32767, 1, 0, -136519275, 32767, 0, 0, 0, 0, -136518773, 32767, 4, 0, -136518779, 32767, 5, 0, 724380718, 825251960, 892613426, 959985462, 1684234849, 825255525, 892613426, 959985462, 1145258561, 724387397, 825251960, 892613426, 959985462, 1684234849, 1111582309, 1178944579, 0, 0, -135885640, 32767, 2, 0, -135885728, 32767, 2, 0, -135885816, 32767, 2, 0, -135885904, 32767, 2, 0, 0, 0, 0, 0, -135874920, 32767, 2, 0, -138609152, 32767, -136467070, 32767, -135863040, 32767, 2, 0, -135874560, 32767, 2, 0, -135863816, 32767, 2, 0, -135841984, 32767, -138609152, 32767, -136467070, 32767, 0, 0, -135874608, 32767, 2, 0, -135874656, 32767, 2, 0, -135875024, 32767, 2, 0, -135841568, 32767, 0, 0, -135875128, 32767, 2, 0, -135841408, 32767, 0, 0, -135889744, 32767, 2, 0, -138609152, 32767, 0, 0, -135863944, 32767, 2, 0, -135864064, 32767, 2, 0, -135875272, 32767, 2, 0, -135841248, 32767, 0, 0, -135875384, 32767, 2, 0, -138609152, 32767, 0, 0, 0, 0, 0, 0, -135884544, 32767, 2, 0, -138609152, 32767, 33619969, 100992003, 168364039, 235736075, 303108111, 370480147, 437852183, 505224219, 572596255, 639968291, 707340327, 774712363, 842084399, 909456435, 976828471, 1044200507, 1111572543, 1178944579, 1246316615, 1313688651, 1381060687, 1448432723, 1515804759, 1583176795, 1650548831, 1717920867, 1785292903, 1852664939, 1920036975, 1987409011, 2054781047, 2122153083, 127, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16...}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '10', 'src': 'if (n == 0 || n == 1) return 0;', 'storage': {'n': '6', 'dp': 'std::vector of length -35184329742273, capacity -35184338128775 = {-135886872, 32767, 1, 0, -136519275, 32767, 0, 0, 0, 0, -136518773, 32767, 4, 0, -136518779, 32767, 5, 0, 724380718, 825251960, 892613426, 959985462, 1684234849, 825255525, 892613426, 959985462, 1145258561, 724387397, 825251960, 892613426, 959985462, 1684234849, 1111582309, 1178944579, 0, 0, -135885640, 32767, 2, 0, -135885728, 32767, 2, 0, -135885816, 32767, 2, 0, -135885904, 32767, 2, 0, 0, 0, 0, 0, -135874920, 32767, 2, 0, -138609152, 32767, -136467070, 32767, -135863040, 32767, 2, 0, -135874560, 32767, 2, 0, -135863816, 32767, 2, 0, -135841984, 32767, -138609152, 32767, -136467070, 32767, 0, 0, -135874608, 32767, 2, 0, -135874656, 32767, 2, 0, -135875024, 32767, 2, 0, -135841568, 32767, 0, 0, -135875128, 32767, 2, 0, -135841408, 32767, 0, 0, -135889744, 32767, 2, 0, -138609152, 32767, 0, 0, -135863944, 32767, 2, 0, -135864064, 32767, 2, 0, -135875272, 32767, 2, 0, -135841248, 32767, 0, 0, -135875384, 32767, 2, 0, -138609152, 32767, 0, 0, 0, 0, 0, 0, -135884544, 32767, 2, 0, -138609152, 32767, 33619969, 100992003, 168364039, 235736075, 303108111, 370480147, 437852183, 505224219, 572596255, 639968291, 707340327, 774712363, 842084399, 909456435, 976828471, 1044200507, 1111572543, 1178944579, 1246316615, 1313688651, 1381060687, 1448432723, 1515804759, 1583176795, 1650548831, 1717920867, 1785292903, 1852664939, 1920036975, 1987409011, 2054781047, 2122153083, 127, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16...}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '13', 'src': 'vector<int> dp(n, 0);', 'storage': {'n': '6', 'dp': 'std::vector of length -35184329742273, capacity -35184338128775 = {-135886872, 32767, 1, 0, -136519275, 32767, 0, 0, 0, 0, -136518773, 32767, 4, 0, -136518779, 32767, 5, 0, 724380718, 825251960, 892613426, 959985462, 1684234849, 825255525, 892613426, 959985462, 1145258561, 724387397, 825251960, 892613426, 959985462, 1684234849, 1111582309, 1178944579, 0, 0, -135885640, 32767, 2, 0, -135885728, 32767, 2, 0, -135885816, 32767, 2, 0, -135885904, 32767, 2, 0, 0, 0, 0, 0, -135874920, 32767, 2, 0, -138609152, 32767, -136467070, 32767, -135863040, 32767, 2, 0, -135874560, 32767, 2, 0, -135863816, 32767, 2, 0, -135841984, 32767, -138609152, 32767, -136467070, 32767, 0, 0, -135874608, 32767, 2, 0, -135874656, 32767, 2, 0, -135875024, 32767, 2, 0, -135841568, 32767, 0, 0, -135875128, 32767, 2, 0, -135841408, 32767, 0, 0, -135889744, 32767, 2, 0, -138609152, 32767, 0, 0, -135863944, 32767, 2, 0, -135864064, 32767, 2, 0, -135875272, 32767, 2, 0, -135841248, 32767, 0, 0, -135875384, 32767, 2, 0, -138609152, 32767, 0, 0, 0, 0, 0, 0, -135884544, 32767, 2, 0, -138609152, 32767, 33619969, 100992003, 168364039, 235736075, 303108111, 370480147, 437852183, 505224219, 572596255, 639968291, 707340327, 774712363, 842084399, 909456435, 976828471, 1044200507, 1111572543, 1178944579, 1246316615, 1313688651, 1381060687, 1448432723, 1515804759, 1583176795, 1650548831, 1717920867, 1785292903, 1852664939, 1920036975, 1987409011, 2054781047, 2122153083, 127, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16...}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '13', 'src': 'vector<int> dp(n, 0);', 'storage': {'n': '6', 'dp': 'std::vector of length -35184329742273, capacity -35184338128775 = {-135886872, 32767, 1, 0, -136519275, 32767, 0, 0, 0, 0, -136518773, 32767, 4, 0, -136518779, 32767, 5, 0, 724380718, 825251960, 892613426, 959985462, 1684234849, 825255525, 892613426, 959985462, 1145258561, 724387397, 825251960, 892613426, 959985462, 1684234849, 1111582309, 1178944579, 0, 0, -135885640, 32767, 2, 0, -135885728, 32767, 2, 0, -135885816, 32767, 2, 0, -135885904, 32767, 2, 0, 0, 0, 0, 0, -135874920, 32767, 2, 0, -138609152, 32767, -136467070, 32767, -135863040, 32767, 2, 0, -135874560, 32767, 2, 0, -135863816, 32767, 2, 0, -135841984, 32767, -138609152, 32767, -136467070, 32767, 0, 0, -135874608, 32767, 2, 0, -135874656, 32767, 2, 0, -135875024, 32767, 2, 0, -135841568, 32767, 0, 0, -135875128, 32767, 2, 0, -135841408, 32767, 0, 0, -135889744, 32767, 2, 0, -138609152, 32767, 0, 0, -135863944, 32767, 2, 0, -135864064, 32767, 2, 0, -135875272, 32767, 2, 0, -135841248, 32767, 0, 0, -135875384, 32767, 2, 0, -138609152, 32767, 0, 0, 0, 0, 0, 0, -135884544, 32767, 2, 0, -138609152, 32767, 33619969, 100992003, 168364039, 235736075, 303108111, 370480147, 437852183, 505224219, 572596255, 639968291, 707340327, 774712363, 842084399, 909456435, 976828471, 1044200507, 1111572543, 1178944579, 1246316615, 1313688651, 1381060687, 1448432723, 1515804759, 1583176795, 1650548831, 1717920867, 1785292903, 1852664939, 1920036975, 1987409011, 2054781047, 2122153083, 127, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16...}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '13', 'src': 'vector<int> dp(n, 0);', 'storage': {'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '14', 'src': 'int min_price = prices[0];', 'storage': {'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'min_price': '-137207925', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '-8484', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '18', 'src': 'dp[i] = max(dp[i - 1], prices[i] - min_price);', 'storage': {'i': '1', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 0, 0, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '19', 'src': 'min_price = min(min_price, prices[i]);', 'storage': {'i': '1', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 0, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '1', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 0, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '18', 'src': 'dp[i] = max(dp[i - 1], prices[i] - min_price);', 'storage': {'i': '2', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 0, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '19', 'src': 'min_price = min(min_price, prices[i]);', 'storage': {'i': '2', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '2', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '18', 'src': 'dp[i] = max(dp[i - 1], prices[i] - min_price);', 'storage': {'i': '3', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 0, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '19', 'src': 'min_price = min(min_price, prices[i]);', 'storage': {'i': '3', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '3', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '18', 'src': 'dp[i] = max(dp[i - 1], prices[i] - min_price);', 'storage': {'i': '4', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 0, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '19', 'src': 'min_price = min(min_price, prices[i]);', 'storage': {'i': '4', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '4', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '18', 'src': 'dp[i] = max(dp[i - 1], prices[i] - min_price);', 'storage': {'i': '5', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 0}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '19', 'src': 'min_price = min(min_price, prices[i]);', 'storage': {'i': '5', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 7}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '17', 'src': 'for (int i = 1; i < n; i++) {', 'storage': {'i': '5', 'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 7}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '23', 'src': 'return dp[n - 1];', 'storage': {'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 7}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '24', 'src': '}', 'storage': {'n': '6', 'dp': 'std::vector of length 6, capacity 6 = {0, 7, 7, 7, 7, 7}', 'min_price': '3', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}'}}
{'line': '38', 'src': 'cout << result << endl;', 'storage': {'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'result': '7'}}
{'line': '40', 'src': 'return 0;', 'storage': {'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'result': '7'}}
{'line': '41', 'src': '}', 'storage': {'n': '6', 'prices': 'std::vector of length 6, capacity 6 = {3, 10, 4, 5, 6, 3}', 'result': '7'}}
